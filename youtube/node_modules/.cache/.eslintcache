[{"/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/index.js":"1","/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/app.jsx":"2","/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/video.jsx":"3","/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/video_item/video_item.jsx":"4","/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/video_list/video_list.jsx":"5","/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/search/search.jsx":"6","/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/service/youtube.js":"7","/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/video_detail/video_detail.jsx":"8"},{"size":431,"mtime":1654268085423,"results":"9","hashOfConfig":"10"},{"size":1954,"mtime":1654491975747,"results":"11","hashOfConfig":"10"},{"size":421,"mtime":1654222486035,"results":"12","hashOfConfig":"10"},{"size":1034,"mtime":1654492312862,"results":"13","hashOfConfig":"10"},{"size":439,"mtime":1654269143061,"results":"14","hashOfConfig":"10"},{"size":1051,"mtime":1654496431805,"results":"15","hashOfConfig":"10"},{"size":1122,"mtime":1654492567646,"results":"16","hashOfConfig":"10"},{"size":1419,"mtime":1654496226370,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1oeeow5",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/index.js",[],[],[],"/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/app.jsx",["46"],[],"import React, { useCallback, useEffect, useState } from \"react\";\nimport Search from \"./components/search/search\";\nimport styles from \"./app.module.css\";\nimport VideoList from \"./components/video_list/video_list\";\nimport VideoDetail from \"./components/video_detail/video_detail\";\n\nconst App = ({ youtube }) => {\n  // 여기서 나온 youtube는 index.js애서 클래스 선언하고 props로 받아온 아이\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const selectVideo = (video) => {\n    setSelectedVideo(video);\n  };\n  const moveToTOp = () => {};\n\n  const search = useCallback(\n    //useCallback을 사용한 이유 : 결국 위에 있는 함수들은 props이 전달될떄 마다 새로 불러지는데 무분별한 불러짐을 막기위해 useeffect처럼 초반에 mount됬을때만 불러주기위해 뒤에 빈배열을 추가했다, 무분별한 usecallback남용 하지마라\n    (query) => {\n      setSelectedVideo(null);\n      youtube\n        .search(query) //\n        .then((videos) => {\n          setVideos(videos);\n          // console.log(selectedVideo);\n        });\n    },\n    [youtube]\n  );\n\n  useEffect(() => {\n    youtube\n      .mostPopular() //\n      .then((videos) => setVideos(videos));\n  }, [youtube]);\n\n  return (\n    <div className={styles.appWrapper}>\n      <Search onSearch={search}></Search>\n      <div className={styles.videoWrapper}>\n        {selectedVideo && (\n          <div className={styles.detail}>\n            <VideoDetail video={selectedVideo}></VideoDetail>\n          </div>\n        )}\n        <div className={styles.videoList}>\n          <VideoList\n            onVideoClick={selectVideo}\n            videos={videos}\n            display={selectedVideo ? \"list\" : \"grid\"} //selectedvideo가 있따면 list없다면 grid인데 이를 통해서 뒤에 widht를 바꿔준다\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",[],"/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/video.jsx",[],[],[],"/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/video_item/video_item.jsx",[],[],"/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/video_list/video_list.jsx",[],[],"/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/search/search.jsx",[],[],"/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/service/youtube.js",[],[],"/Users/moseung/Documents/GitHub/reactdreamcoding/youtube/src/components/video_detail/video_detail.jsx",[],[],{"ruleId":"47","severity":1,"message":"48","line":15,"column":9,"nodeType":"49","messageId":"50","endLine":15,"endColumn":18},"no-unused-vars","'moveToTOp' is assigned a value but never used.","Identifier","unusedVar"]